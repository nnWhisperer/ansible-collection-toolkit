# SPDX-FileCopyrightText: Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---

- name: "Copy gitlab-secrets.json"
  ansible.builtin.copy:
    src: "{{ gitlab_secrets_file }}"
    dest: "/etc/gitlab/gitlab-secrets.json"
    owner: "root"
    group: "root"
    mode: "0600"
    backup: true
  when: "gitlab_secrets_file is defined"
  no_log: "{{ gitlab_hide_sensitive_changes }}"
  notify:
    - "Reconfigure Primary GitLab"
    - "Run registry metadata database migrations"
    - "Reconfigure Non Primary GitLab"

- name: "Ensure gitaly['configuration'] is not present in gitlab_additional_configurations"
  when: "gitlab_use_internal_gitaly"
  block:
    - name: "Check if gitaly is present"
      when:
        - "gitlab_additional_configurations | length > 0"
        - "item.gitaly is defined"
      ansible.builtin.set_fact:
        __gitaly_item: "{{ item.gitaly }}"
      with_items: "{{ gitlab_additional_configurations }}"

    - name: "Check if gitaly['configuration'] is present"
      when:
        - "item.key is defined"
        - "item.key == 'configuration'"
      ansible.builtin.set_fact:
        __gitaly_configuration_exists: true
      with_items: "{{ __gitaly_item | default([]) }}"

    - name: "Warn if gitaly['configuration'] is already present"
      when:
        - "__gitaly_configuration_exists"
      ansible.builtin.debug:
        msg: "Please make sure to configure gitaly storage paths yourself in gitaly['configuration']"

- name: "Copy GitLab Configuration File."
  become: true
  ansible.builtin.template:
    src: "{{ gitlab_configuration_file_template }}"
    dest: "{{ gitlab_configuration_file_path }}"
    owner: "root"
    group: "root"
    mode: "0644"
  no_log: "{{ gitlab_hide_sensitive_changes }}"
  notify:
    - "Reconfigure Primary GitLab"
    - "Run registry metadata database migrations"
    - "Reconfigure Non Primary GitLab"

- name: "Create file to prevent Gitlab to restart before migrations"
  ansible.builtin.copy:
    content: ""
    dest: "/etc/gitlab/skip-auto-reconfigure"
    force: false
    owner: "root"
    group: "root"
    mode: "0644"
  when: "gitlab_is_primary"

- name: "Create file to prevent Gitlab to backup database"
  ansible.builtin.copy:
    content: ""
    dest: "/etc/gitlab/skip-auto-backup"
    force: false
    owner: "root"
    group: "root"
    mode: "0644"
  when: "not gitlab_is_primary"

...
